"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[7118],{76248:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>c});var o=r(85893),i=r(11151);const n={title:"Overview",slug:"/web-ui-introduction"},s=void 0,d={id:"User interface/introduction",title:"Overview",description:"The web UI is hosted on the leader Pioreactor. Here are the details:",source:"@site/developer-guide/20-User interface/01-introduction.md",sourceDirName:"20-User interface",slug:"/web-ui-introduction",permalink:"/developer-guide/web-ui-introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overview",slug:"/web-ui-introduction"},sidebar:"tutorialSidebar",previous:{title:"Adding behaviour to the HAT's button",permalink:"/developer-guide/hat-button"},next:{title:"API",permalink:"/developer-guide/web-ui-api"}},a={},c=[{value:"Web server",id:"web-server",level:3},{value:"Backend",id:"backend",level:3},{value:"Frontend",id:"frontend",level:3},{value:"DNS name resolution to <code>pioreactor.local</code>",id:"dns-name-resolution-to-pioreactorlocal",level:3},{value:"Updating and restarting the web UI",id:"updating-and-restarting-the-web-ui",level:3},{value:"Logs",id:"logs",level:3}];function l(e){const t={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"The web UI is hosted on the leader Pioreactor. Here are the details:"}),"\n",(0,o.jsx)(t.h3,{id:"web-server",children:"Web server"}),"\n",(0,o.jsxs)(t.p,{children:["The web server we use is lighttpd, and hosted from ",(0,o.jsx)(t.code,{children:"/var/www/pioreactorui"}),". This folder is actually a git repo, and pulls from ",(0,o.jsx)(t.a,{href:"https://github.com/pioreactor/pioreactorui",children:"pioreactorui"})," GH repo. Systemd controls starting and restarting lighttpd."]}),"\n",(0,o.jsxs)(t.p,{children:["The lighttpd conf file is located in ",(0,o.jsx)(t.code,{children:"/etc/lighttpd/conf-enabled/50-pioreactorui.conf"}),". Error logs (though not helpful) are in ",(0,o.jsx)(t.code,{children:"/var/log/lighttpd/error.log"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["The default protocol is ",(0,o.jsx)(t.code,{children:"http"})," served on port ",(0,o.jsx)(t.code,{children:"80"}),". To use ",(0,o.jsx)(t.code,{children:"https"})," requires a certificate, and is out of scope for this project. If you'd change the protocol or the port, you'll need up tell the software too: look in the config.ini under ",(0,o.jsx)(t.code,{children:"[ui]"})," section. ",(0,o.jsx)(t.a,{href:"/user-guide/networking#changing-web-ui-port-from-80-to-something-else",children:"How to change the web UI port"})]}),"\n",(0,o.jsx)(t.h3,{id:"backend",children:"Backend"}),"\n",(0,o.jsxs)(t.p,{children:["The backend app is a Flask app, with entry point in ",(0,o.jsx)(t.code,{children:"/var/www/pioreactorui/main.fcgi"}),". The app uses Huey as background workers to perform ",(0,o.jsx)(t.code,{children:"pio"})," tasks, save to disk, etc. Huey is controlled by systemd ",(0,o.jsx)(t.code,{children:"huey.service"}),". The API is ",(0,o.jsx)(t.a,{href:"/developer-guide/web-ui-api",children:"available here"})]}),"\n",(0,o.jsx)(t.h3,{id:"frontend",children:"Frontend"}),"\n",(0,o.jsxs)(t.p,{children:["The frontend is a React app, built with Material UI components. The source code is at ",(0,o.jsx)(t.a,{href:"https://github.com/Pioreactor/pioreactorui_frontend",children:"pioreactorui_frontend"}),'. A lot of the "data" for the frontend comes from YAML files on the RPi\'s filesystem. For example, all the charts, activities, and automations are defined in their own YAML file in a ',(0,o.jsx)(t.code,{children:"contrib"})," folder on the filesystem. This way, it's easy to add new data to the frontend without having to write new JS."]}),"\n",(0,o.jsxs)(t.h3,{id:"dns-name-resolution-to-pioreactorlocal",children:["DNS name resolution to ",(0,o.jsx)(t.code,{children:"pioreactor.local"})]}),"\n",(0,o.jsxs)(t.p,{children:["To allow for ",(0,o.jsx)(t.code,{children:"pioreactor.local"})," to be an alias for ",(0,o.jsx)(t.code,{children:"<leader hostname>.local"}),", we use mdns provided by ",(0,o.jsx)(t.code,{children:"avahi"}),". There is a systemd service, ",(0,o.jsx)(t.code,{children:"avahi_alias.service"}),", that will point ",(0,o.jsx)(t.code,{children:"pioreactor.local"})," to ",(0,o.jsx)(t.code,{children:"<leader hostname>.local"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"updating-and-restarting-the-web-ui",children:"Updating and restarting the web UI"}),"\n",(0,o.jsxs)(t.p,{children:["To update on the UI on Pioreactor leader, use ",(0,o.jsx)(t.code,{children:"pio update ui"}),". This also restarts the server."]}),"\n",(0,o.jsx)(t.p,{children:"To restart:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"sudo systemctl restart lighttp && sudo systemctl restart huey\n"})}),"\n",(0,o.jsx)(t.h3,{id:"logs",children:"Logs"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Start up logs from systemd are in ",(0,o.jsx)(t.code,{children:"sudo systemctl status lighttpd.service"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:["Logs for the backend and background workers are located in ",(0,o.jsx)(t.code,{children:"/var/log/pioreactor.log"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>d,a:()=>s});var o=r(67294);const i={},n=o.createContext(i);function s(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);