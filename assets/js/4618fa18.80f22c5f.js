"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[1326],{90545:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});var i=o(85893),r=o(11151);const t={title:"Local development of Pioreactor",slug:"/local-development",hide_table_of_contents:!0},l=void 0,s={id:"Development/local-development",title:"Local development of Pioreactor",description:"Local development",source:"@site/developer-guide/30-Development/01-local-development.md",sourceDirName:"30-Development",slug:"/local-development",permalink:"/developer-guide/local-development",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Local development of Pioreactor",slug:"/local-development",hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"Adding a new calibration type",permalink:"/developer-guide/adding-calibration-type"},next:{title:"Development on a Raspberry Pi",permalink:"/developer-guide/pi-development"}},c={},d=[{value:"Local development",id:"local-development",level:3},{value:"MQTT",id:"mqtt",level:3},{value:"Running jobs locally",id:"running-jobs-locally",level:3},{value:"Testing",id:"testing",level:3},{value:"Plugins development",id:"plugins-development",level:3},{value:"Raspberry Pi Images",id:"raspberry-pi-images",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"local-development",children:"Local development"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Confirm that Python3 is installed, and is greater or equal to version 3.9. ",(0,i.jsx)(n.code,{children:"python3 --version"})," will print the version."]}),"\n",(0,i.jsxs)(n.li,{children:["To install the Pioreactor codebase locally, it should be enough to clone the repo ",(0,i.jsx)(n.a,{href:"https://github.com/pioreactor/pioreactor",children:"pioreactor/pioreactor"}),".","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"git clone https://github.com/Pioreactor/pioreactor.git && cd pioreactor\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Install the core software are necessary packages (useful to do this in a virtualenv!):","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pip3 install -e .\npip3 install -r requirements/requirements_dev.txt\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["In the pioreactor folder, create a folder called ",(0,i.jsx)(n.code,{children:".pioreactor/"})," and other important subdirectories.","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mkdir .pioreactor\nmkdir .pioreactor/storage .pioreactor/plugins .pioreactor/exportable_datasets\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["The configuration file that is used is ",(0,i.jsx)(n.code,{children:"config.dev.ini"}),", and is provided  in the repository. Move this to ",(0,i.jsx)(n.code,{children:".pioreactor/"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"mqtt",children:"MQTT"}),"\n",(0,i.jsxs)(n.p,{children:["You will need to install MQTT and have a broker running locally. On OSX, homebrew can be used to install the MQTT broker ",(0,i.jsx)(n.em,{children:"mosquitto"}),". On Windows, it can be installed ",(0,i.jsx)(n.a,{href:"https://mosquitto.org/download/",children:"from this download page"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"mosquitto"})," broker should be running whenever you invoke the Pioreactor software locally, else you'll likely get some ",(0,i.jsx)(n.em,{children:"connection refused"})," error."]})}),"\n",(0,i.jsxs)(n.p,{children:["The CLI tools ",(0,i.jsx)(n.code,{children:"mosquitto_pub"})," and ",(0,i.jsx)(n.code,{children:"mosquitto_sub"})," should work as well."]}),"\n",(0,i.jsx)(n.h3,{id:"running-jobs-locally",children:"Running jobs locally"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["With ",(0,i.jsx)(n.code,{children:"pio"})]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"TESTING=1 pio run <job name>\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can also modify to hostname and experiment with"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"TESTING=1 \\\nHOSTNAME=<whatever> \\\nEXPERIMENT=<up to you> \\\npio run <job name>\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["With ",(0,i.jsx)(n.code,{children:"python"})]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"TESTING=1 python <your script>.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can also modify to hostname and experiment with"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"TESTING=1 \\\nHOSTNAME=<whatever> \\\nEXPERIMENT=<up to you> \\\npython <your script>.py\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If invoking from a different directory from ",(0,i.jsx)(n.code,{children:"pioreactor/"}),", you'll need to have a ",(0,i.jsx)(n.code,{children:"config.dev.ini"})," file locally. I usually copy my ",(0,i.jsx)(n.code,{children:"pioreactor/config.dev.ini"})," to wherever I am working. Or you can use an environment argument ",(0,i.jsx)(n.code,{children:"GLOBAL_CONFIG=./config.dev.ini pio ..."})]})}),"\n",(0,i.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"py.test pioreactor/tests\n"})}),"\n",(0,i.jsx)(n.h3,{id:"plugins-development",children:"Plugins development"}),"\n",(0,i.jsxs)(n.p,{children:["Create a folder in the ",(0,i.jsx)(n.code,{children:"pioreactor"})," folder called ",(0,i.jsx)(n.code,{children:"plugins_dev"}),". In this folder, you can place python files that will run whenever ",(0,i.jsx)(n.code,{children:"pio"})," is invoked (similar to the ",(0,i.jsx)(n.code,{children:"plugins"})," folder at ",(0,i.jsx)(n.code,{children:".pioreactor/plugins"})," on the Raspberry Pi, see ",(0,i.jsx)(n.a,{href:"/developer-guide/intro-plugins#1-adding-python-files-to-plugins-folder",children:"docs here"}),")"]}),"\n",(0,i.jsx)(n.h3,{id:"raspberry-pi-images",children:"Raspberry Pi Images"}),"\n",(0,i.jsxs)(n.p,{children:["Raspberry Pi images are built in the ",(0,i.jsx)(n.a,{href:"https://github.com/Pioreactor/CustoPiZer/tree/pioreactor",children:"Pioreactor/CustoPizer"})," repo. Nightly builds are available at ",(0,i.jsx)(n.a,{href:"https://nightly.pioreactor.com",children:"nightly.pioreactor.com"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>s,a:()=>l});var i=o(67294);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);