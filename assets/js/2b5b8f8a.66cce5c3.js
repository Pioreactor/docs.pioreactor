"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[6217],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,h=m["".concat(u,".").concat(d)]||m[d]||l[d]||i;return r?n.createElement(h,a(a({ref:t},p),{},{components:r})):n.createElement(h,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},78879:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const i={title:"Using the StemmaQT/Qwicc connector",slug:"/using-stemma-qt"},a=void 0,c={unversionedId:"Extending your Pioreactor/using-stemma-qt",id:"Extending your Pioreactor/using-stemma-qt",title:"Using the StemmaQT/Qwicc connector",description:"The Pioreactor HAT comes with a connector for the StemmaQT / Qwiic connector that can be used to attach additional hardware for your Pioreactor. See image below:",source:"@site/user-guide/03-Extending your Pioreactor/11-using-stemma-qt.md",sourceDirName:"03-Extending your Pioreactor",slug:"/using-stemma-qt",permalink:"/user-guide/using-stemma-qt",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Using the StemmaQT/Qwicc connector",slug:"/using-stemma-qt"},sidebar:"tutorialSidebar",previous:{title:"Supplying auxiliary power to the Pioreactor's PWM channels",permalink:"/user-guide/external-power"},next:{title:"Using community plugins",permalink:"/user-guide/using-community-plugins"}},u={},s=[{value:"Example",id:"example",level:3}],p={toc:s};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Pioreactor HAT comes with a connector for the StemmaQT / Qwiic connector that can be used to attach additional hardware for your Pioreactor. See image below:"),(0,o.kt)("img",{src:"/img/user-guide/stemma_qt.png",width:"325",style:{margin:"auto",display:"block"}}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"What is StemmaQT / Qwiic? It's simply a standardized physical connector, the JST SH, with electronic connections to 3.3V, GND and I\xb2C. Many other hardware design companies, like Adafruit and SparkFun, implement StemmaQT / Qwiic on their boards, which expands the StemmaQT / Qwiic ecosystem. ")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Suppose you are placing your Pioreactor in a CO\u2082 incubator, and want to record the CO\u2082 concentration of the incubator. The incubator does monitor the CO\u2082 concentration, but generally this isn't accessible to other tools. What you can do is purchase an external CO\u2082 sensor with StemmaQT / Qwiic connectors, like the ",(0,o.kt)("a",{parentName:"p",href:"https://www.adafruit.com/product/5187"},"SCD-40"),", and attach it to your Pioreactor. The Pioreactor can now read from the CO\u2082 sensor, and build logging, event-loops, plotting, etc. around the measurements. "),(0,o.kt)("p",null,"To read from the sensor, a ",(0,o.kt)("a",{parentName:"p",href:"/user-guide/using-community-plugins"},"plugin")," may be available for it, or you can write a simple Python script like so:"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"To run the script, you'll first need to install the Python library:\n",(0,o.kt)("inlineCode",{parentName:"p"},"sudo pip3 install adafruit-circuitpython-scd4x"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import sleep\nimport board\nimport adafruit_scd4x\n\nfrom pioreactor.pubsub import publish\nfrom pioreactor.whoami import get_unit_name, get_latest_experiment_name\n\ni2c = board.I2C()\nscd4x = adafruit_scd4x.SCD4X(i2c)\n\nexp = get_latest_experiment_name()\nunit = get_unit_name()\n\nscd4x.start_periodic_measurement()\n\nwhile True:\n    if scd4x.data_ready:\n        \n        print("CO2: %d ppm" % scd4x.CO2)\n        publish(f"pioreactor/{unit}/{exp}/scd4x/co2", scd4x.CO2, retain=True)\n\n        print("Temperature: %0.1f *C" % scd4x.temperature)\n        publish(f"pioreactor/{unit}/{exp}/scd4x/temperature", scd4x.temperature, retain=True)\n\n        print("Humidity: %0.1f %%" % scd4x.relative_humidity)\n        publish(f"pioreactor/{unit}/{exp}/scd4x/relative_humidity", scd4x.relative_humidity, retain=True)\n\n        print()\n    time.sleep(1)\n\n')),(0,o.kt)("p",null,"Running this on your Pioreactor will publish the data to MQTT, and thus be available to any other bioreactor job. "),(0,o.kt)("p",null,"You could also turn this into a ",(0,o.kt)("a",{parentName:"p",href:"/developer-guide/intro-background-jobs"},"background job")," to make it even easier to use!"))}l.isMDXComponent=!0}}]);