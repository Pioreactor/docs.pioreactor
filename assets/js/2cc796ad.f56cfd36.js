"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[6705],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>u});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(o),u=n,f=m["".concat(p,".").concat(u)]||m[u]||s[u]||a;return o?r.createElement(f,l(l({ref:t},d),{},{components:o})):r.createElement(f,l({ref:t},d))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<a;c++)l[c]=o[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},91838:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=o(87462),n=(o(67294),o(3905));const a={title:"Local development of Pioreactor",slug:"/local-development"},l=void 0,i={unversionedId:"Local development/local-development",id:"Local development/local-development",title:"Local development of Pioreactor",description:"Local development",source:"@site/developer-guide/06-Local development/01-local-development.md",sourceDirName:"06-Local development",slug:"/local-development",permalink:"/developer-guide/local-development",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Local development of Pioreactor",slug:"/local-development"},sidebar:"tutorialSidebar",previous:{title:"Data stores in the Pioreactor",permalink:"/developer-guide/data-stores"},next:{title:"I\xb2C addresses",permalink:"/developer-guide/i2c-addresses"}},p={},c=[{value:"Local development",id:"local-development",level:4},{value:"MQTT",id:"mqtt",level:4},{value:"Testing",id:"testing",level:4},{value:"Running jobs locally",id:"running-jobs-locally",level:4},{value:"Raspberry Pi Images",id:"raspberry-pi-images",level:4}],d={toc:c};function s(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"local-development"},"Local development"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"To install the Pioreactor codebase locally, it should be enough to clone the repo ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/pioreactor/pioreactor"},"pioreactor/pioreactor"),".")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git clone https://github.com/Pioreactor/pioreactor.git && cd pioreactor\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Install the core software are necessary packages (useful to do this in a virtualenv!):")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"pip3 install -e .\npip3 install -r requirements/requirements_dev.txt\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"In the pioreactor folder, create a folder called ",(0,n.kt)("inlineCode",{parentName:"li"},".pioreactor/")," and ",(0,n.kt)("inlineCode",{parentName:"li"},".pioreactor/storage"),".")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"mkdir .pioreactor\nmkdir .pioreactor/storage\n")),(0,n.kt)("h4",{id:"mqtt"},"MQTT"),(0,n.kt)("p",null,"You will need to install MQTT and have a broker running locally. On OSX, homebrew can be used to install the MQTT broker ",(0,n.kt)("inlineCode",{parentName:"p"},"mosquitto"),". On Windows, it can be installed ",(0,n.kt)("a",{parentName:"p",href:"https://mosquitto.org/download/"},"from this download page"),"."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"enable logging in ",(0,n.kt)("inlineCode",{parentName:"p"},"/usr/local/etc/mosquitto/mosquitto.conf")," by adding a line like:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre"},"log_dest file path/to/somewhere/.mosquitto/log\n"))),(0,n.kt)("p",null,"The CLI tools ",(0,n.kt)("inlineCode",{parentName:"p"},"mosquitto_pub")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"mosquitto_sub")," should work as well."),(0,n.kt)("h4",{id:"testing"},"Testing"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"py.test pioreactor/tests\n")),(0,n.kt)("h4",{id:"running-jobs-locally"},"Running jobs locally"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"TESTING=1 pio run <job name>\n")),(0,n.kt)("p",null,"You can also modify to hostname and experiment with"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"TESTING=1 \\\nHOSTNAME=<whatever> \\\nEXPERIMENT=<up to you> \\\npio run <job name>\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"If invoking from a different directory from ",(0,n.kt)("inlineCode",{parentName:"p"},"pioreactor/"),", you'll need to have a ",(0,n.kt)("inlineCode",{parentName:"p"},"config.dev.ini")," file locally. I usually copy my ",(0,n.kt)("inlineCode",{parentName:"p"},"pioreactor/config.dev.ini")," to wherever I am working.")),(0,n.kt)("h4",{id:"raspberry-pi-images"},"Raspberry Pi Images"),(0,n.kt)("p",null,"Raspberry Pi images are built in the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Pioreactor/CustoPiZer/tree/pioreactor"},"Pioreactor/CustoPizer")," repo, though these aren't needed for development."))}s.isMDXComponent=!0}}]);