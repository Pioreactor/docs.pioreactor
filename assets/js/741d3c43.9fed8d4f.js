"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[3866],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>d});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(t),f=o,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||i;return t?n.createElement(d,a(a({ref:r},c),{},{components:t})):n.createElement(d,a({ref:r},c))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=e,p[m]="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},16657:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=t(87462),o=(t(67294),t(3905));const i={title:"Experiment profiles schema",slug:"/experiment-profiles-schema"},a=void 0,p={unversionedId:"Extending your Pioreactor/Experiment Profiles/experiment-profiles-schema",id:"Extending your Pioreactor/Experiment Profiles/experiment-profiles-schema",title:"Experiment profiles schema",description:"Examples",source:"@site/user-guide/03-Extending your Pioreactor/04-Experiment Profiles/10-experiment-profiles-schema.md",sourceDirName:"03-Extending your Pioreactor/04-Experiment Profiles",slug:"/experiment-profiles-schema",permalink:"/user-guide/experiment-profiles-schema",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Experiment profiles schema",slug:"/experiment-profiles-schema"},sidebar:"tutorialSidebar",previous:{title:"Creating and editing experiment profiles",permalink:"/user-guide/create-edit-experiment-profiles"},next:{title:"Standard curves for OD600 readings",permalink:"/user-guide/calibrate-od600"}},s={},l=[{value:"Examples",id:"examples",level:3}],c={toc:l},m="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(m,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# Main structure\nexperiment_profile_name: <string> # Name of the experiment profile\n\nmetadata:\n  author: <string> # Author of the experiment profile\n  description: <string> # Description of the experiment profile\n\nplugins:\n  - name: <string> # Name of the plugin\n    min_version: <string> # Minimum required version of the plugin\n\naliases:\n  <alias_name>: <bioreactor_name> # Optional: aliases for bioreactors\n\ncommon: # Optional: jobs that are common for all bioreactors\n  <job_name>:\n    actions:\n      - type: <string> # Type of action: "start", "pause", "resume", "stop", or "update"\n        hours_elapsed: <float> # When the action is scheduled (in hours after experiment start)\n        options: # Optional: parameters for the action\n          <option_name>: <value>\n        arguments: <list> # Optional: arguments for the action\n\npioreactors:\n  <alias_name or bioreactor_name>:\n    jobs:\n      <job_name>:\n        actions:\n          - type: <string> # Type of action: "start", "pause", "resume", "stop", or "update"\n            hours_elapsed: <float> # When the action is scheduled (in hours after experiment start)\n            options: # Optional: parameters for the action\n              <option_name>: <value>\n')),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("p",null,"See examples of experiment profiles ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Pioreactor/experiment_profile_examples"},"here")))}u.isMDXComponent=!0}}]);