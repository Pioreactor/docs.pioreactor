"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[3543],{47721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(85893),i=n(11151);const o={title:"Writing scripts",slug:"/writing-scripts",hide_table_of_contents:!0},s=void 0,c={id:"Scripts/writing-scripts",title:"Writing scripts",description:"Since the behaviour of the Pioreactor is controlled by Python objects, you can write Python scripts that use those objects. Here's a simple example of starting the stirring by creating the Stirrer object:",source:"@site/developer-guide/05-Scripts/01-writing-scripts.md",sourceDirName:"05-Scripts",slug:"/writing-scripts",permalink:"/developer-guide/writing-scripts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Writing scripts",slug:"/writing-scripts",hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"Automation events",permalink:"/developer-guide/events"},next:{title:"Working with plugins",permalink:"/developer-guide/intro-plugins"}},a={},l=[{value:"Starting a long-running script",id:"starting-a-long-running-script",level:3},{value:"Useful utility objects",id:"useful-utility-objects",level:3}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Since the behaviour of the Pioreactor is controlled by Python objects, you can write Python scripts that use those objects. Here's a simple example of starting the stirring by creating the ",(0,r.jsx)(t.code,{children:"Stirrer"})," object:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from pioreactor.background_jobs.stirring import Stirrer, RpmFromFrequency\nfrom pioreactor.whoami import get_unit_name\nfrom pioreactor.whoami import get_assigned_experiment_name\n\nunit = get_unit_name()\nexperiment = get_assigned_experiment_name(unit)\n\nst = Stirrer(\n    target_rpm=300,\n    unit=unit,\n    experiment=experiment,\n    rpm_calculator=RpmFromFrequency()\n)\n\nst.start_stirring()\n\nst.block_until_disconnected() # pauses the execution, but stirring continues\n\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Save this code to a local file on your Pioreactor's Raspberry Pi called ",(0,r.jsx)(t.code,{children:"stirring_script.py"}),". Then, running ",(0,r.jsx)(t.code,{children:"python stirring_scripy.py"}),", you should see that stirring on the Pioreactor starts. With the script running, you should also updates on the Pioreactor UI (ex: see ",(0,r.jsx)(t.a,{href:"http://pioreactor.local/pioreactors",children:"pioreactor.local/pioreactors"})," page). Typing ",(0,r.jsx)(t.code,{children:"ctrl-c"})," will exit the script."]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["What is ",(0,r.jsx)(t.code,{children:"get_unit_name"})," and ",(0,r.jsx)(t.code,{children:"get_assigned_experiment_name"}),"? These are helper functions that get the current name of the Pioreactor, and the current experiment name, respectively. Using the current experiment name will ensure that your data shows up in the UI, and is correctly stored in the database."]})}),"\n",(0,r.jsx)(t.h3,{id:"starting-a-long-running-script",children:"Starting a long-running script"}),"\n",(0,r.jsx)(t.p,{children:"On the command line, you can run your script with"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"python your_script.py\n"})}),"\n",(0,r.jsx)(t.p,{children:"If you want to run the script in the background (so you can close terminal and the job continues in the background), use"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"\npython your_script.py >/dev/null 2>&1 & disown\n\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You can also use the ",(0,r.jsx)(t.a,{href:"https://docs.pioreactor.com/developer-guide/intro-plugins#scripts",children:"Pioreactor's plugin architecture"})," to control the start and stop of the script."]}),"\n",(0,r.jsx)(t.h3,{id:"useful-utility-objects",children:"Useful utility objects"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/Pioreactor/pioreactor/blob/60875ebe5a35d7ed5c930d46ed7c755eadcb4b74/pioreactor/utils/timing.py#L40",children:"RepeatedTimer"}),": this class allows you to scheduale a function to run every N seconds in a non-blocking manner."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>s});var r=n(67294);const i={},o=r.createContext(i);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);