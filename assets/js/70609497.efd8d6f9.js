"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[1655],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=s(n),b=r,m=d["".concat(l,".").concat(b)]||d[b]||c[b]||a;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},38659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={title:"Adding behaviour to the HAT's button",slug:"/hat-button"},i=void 0,u={unversionedId:"Hardware/button-down",id:"Hardware/button-down",title:"Adding behaviour to the HAT's button",description:"You can add a hook to what happens when the button is pressed on the Pioreactor HAT. For example, you could do things like:",source:"@site/developer-guide/07-Hardware/06-button-down.md",sourceDirName:"07-Hardware",slug:"/hat-button",permalink:"/developer-guide/hat-button",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Adding behaviour to the HAT's button",slug:"/hat-button"},sidebar:"tutorialSidebar",previous:{title:"Pinout diagram",permalink:"/developer-guide/pinout"},next:{title:"User interface",permalink:"/developer-guide/web-ui-introduction"}},l={},s=[],p={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can add a hook to what happens when the button is pressed on the Pioreactor HAT. For example, you could do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Flash an LED on when the button is pressed "),(0,r.kt)("li",{parentName:"ul"},"Cycle media: turn on both media and waste pumps for as long as the button is compressed for"),(0,r.kt)("li",{parentName:"ul"},"Pause a job, example: pause OD reading so you can take the vial out of the sleeve to inspect"),(0,r.kt)("li",{parentName:"ul"},"Spike the culture via dosing")),(0,r.kt)("p",null,"To do this, you need to write a small plugin that can be placed in the Pioreactor's ",(0,r.kt)("inlineCode",{parentName:"p"},"/home/pioreactor/.pioreactor/plugins")," folder. Here's an example on how to turn on LED channel B for as long as the button is compressed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'"""\nThe background job Monitor is the job that listens to button state changes. There are hooks in that class\nto add callbacks for button down and button up.\n"""\nfrom pioreactor.background_jobs.monitor import  Monitor\nfrom pioreactor.actions.led_intensity import led_intensity\n\ndef on(*args):\n    led_intensity({\'B\': 20}, verbose=False, source_of_event="button")\n\ndef off(*args):\n    led_intensity({\'B\': 0}, verbose=False, source_of_event="button")\n\nMonitor.add_pre_button_callback(on)\nMonitor.add_post_button_callback(off)\n')),(0,r.kt)("p",null,"An example to pause a job over MQTT:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from pioreactor.background_jobs.monitor import  Monitor\nfrom pioreactor.pubsub import publish\nfrom pioreactor.whoami import get_latest_experiment_name, get_unit_name\n\ntarget="od_reading"\n\ndef pause(*args):\n    publish(f"pioreactor/{get_unit_name()}/{get_latest_experiment_name()}/{target}/state/set", "sleeping")\n\ndef unpause(*args):\n    publish(f"pioreactor/{get_unit_name()}/{get_latest_experiment_name()}/{target}/state/set", "ready")\n\nMonitor.add_pre_button_callback(pause)\nMonitor.add_post_button_callback(unpause)\n')))}c.isMDXComponent=!0}}]);