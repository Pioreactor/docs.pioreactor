"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[5790],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),l=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6864:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={title:"Automation events",slug:"/events"},u=void 0,l={unversionedId:"Automations/events",id:"Automations/events",title:"Automation events",description:"The execute method attached to any automation can return either None, or a AutomationEvent. If the latter, the event will be published to MQTT as a published setting, i.e under the topic pioreactor///dosingautomation/latestevent. This can be used to downstream events that want to know about what events are occurring.",source:"@site/developer-guide/04-Automations/05-events.md",sourceDirName:"04-Automations",slug:"/events",permalink:"/developer-guide/events",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Automation events",slug:"/events"},sidebar:"tutorialSidebar",previous:{title:"Adding custom pumps to dosing automations",permalink:"/developer-guide/writing-pump-software"},next:{title:"Introduction to plugins",permalink:"/developer-guide/intro-plugins"}},p={},c=[{value:"Using events, and creating your own",id:"using-events-and-creating-your-own",level:3}],d={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"execute")," method attached to any automation can return either ",(0,a.kt)("inlineCode",{parentName:"p"},"None"),", or a ",(0,a.kt)("inlineCode",{parentName:"p"},"AutomationEvent"),". If the latter, the event will be published to MQTT as a published setting, i.e under the topic ",(0,a.kt)("inlineCode",{parentName:"p"},"pioreactor/<unit>/<experiment>/dosing_automation/latest_event"),". This can be used to downstream events that want to know about what events are occurring."),(0,a.kt)("p",null,"It may make more sense to look at a specific ",(0,a.kt)("inlineCode",{parentName:"p"},"execute"),". This is from the builtin ",(0,a.kt)("inlineCode",{parentName:"p"},"Turbidostat")," automation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Turbidostat(DosingAutomationJob):\n    ...\n\n    def execute(self) -> Optional[events.DilutionEvent]:\n        if self.latest_od >= self.target_od:\n            self.execute_io_action(media_ml=self.volume, waste_ml=self.volume)\n            return events.DilutionEvent(\n                f\"latest OD={self.latest_od:.2f} >= target OD={self.target_od:.2f}\",\n                {'latest_od': self.latest_od, 'target_od': self.target_od}\n            )\n        else:\n            return\n")),(0,a.kt)("p",null,"When ",(0,a.kt)("inlineCode",{parentName:"p"},"execute")," runs, either a ",(0,a.kt)("inlineCode",{parentName:"p"},"DilutionEvent")," or nothing is returned. All events take up two (optional) arguments: a message, and a dictionary of arbitrary data. In this case, we've included a small message of ",(0,a.kt)("em",{parentName:"p"},"why")," the dosing did or did not occur, and included some metadata about the optical densities."),(0,a.kt)("p",null,"After ",(0,a.kt)("inlineCode",{parentName:"p"},"execute")," returns an event, it will be published to MQTT. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'pioreactor/unit/demo_exp/dosing_automation/latest_event   {"event_name":"NoEvent","message":"latest OD=0.98 < target OD=1.00","data":{"latest_od":0.98,"target_od":1.0}}\n')),(0,a.kt)("p",null,"This can be listed in other jobs, and acted on, if needed."),(0,a.kt)("h3",{id:"using-events-and-creating-your-own"},"Using events, and creating your own"),(0,a.kt)("p",null,"Pioreactor ships with some default events. They are located in ",(0,a.kt)("inlineCode",{parentName:"p"},"pioreactor.automation.events"),". Events are simple subclass of ",(0,a.kt)("inlineCode",{parentName:"p"},"events.AutomationEvent"),", so events behave and look the same, except for their name."),(0,a.kt)("p",null,"You can create custom automations, too:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"From pioreactor.automations.events import AutomationEvent\n\nclass ExampleEvent(AutomationEvent):\n    pass\n\n\nevent = ExampleEvent(\"my message\", {'some_data': 1.0})\n")))}m.isMDXComponent=!0}}]);