"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[3380],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,h=d["".concat(p,".").concat(m)]||d[m]||s[m]||i;return r?n.createElement(h,a(a({ref:t},u),{},{components:r})):n.createElement(h,a({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},92308:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const i={title:"Development on a Raspberry Pi",slug:"/pi-development"},a=void 0,l={unversionedId:"Development/development-on-Raspberry-Pi",id:"Development/development-on-Raspberry-Pi",title:"Development on a Raspberry Pi",description:"Developing without hardware",source:"@site/developer-guide/30-Development/02-development-on-Raspberry-Pi.md",sourceDirName:"30-Development",slug:"/pi-development",permalink:"/developer-guide/pi-development",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Development on a Raspberry Pi",slug:"/pi-development"},sidebar:"tutorialSidebar",previous:{title:"Local development of Pioreactor",permalink:"/developer-guide/local-development"},next:{title:"The Big Architecture Picture",permalink:"/developer-guide/architecture"}},p={},c=[{value:"Developing without hardware",id:"developing-without-hardware",level:3}],u={toc:c};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"developing-without-hardware"},"Developing without hardware"),(0,o.kt)("p",null,"If you have a Raspberry Pi available, you can quickly boot up a near-exact environment to a Pioreactor. We can mock out the hardware needed, but everything else will work: networking, the Pioreactor UI, MQTT, running jobs, plugins, etc."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install the Pioreactor software on to a microSD card by following the instructions ",(0,o.kt)("a",{parentName:"li",href:"/user-guide/software-set-up"},"here"),"."),(0,o.kt)("li",{parentName:"ol"},"Power the Raspberry Pi. Since there's no HAT hardware, there won't be a blue blinking LED. The Raspberry Pi will still connect to the network you provided in the setup."),(0,o.kt)("li",{parentName:"ol"},"SSH into the Raspberry Pi. ",(0,o.kt)("a",{parentName:"li",href:"http://localhost:3001/user-guide/accessing-raspberry-pi"},"Instructions on how to SSH in"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"You should also be able to visit ",(0,o.kt)("a",{parentName:"li",href:"http://pioreactor.local"},"http://pioreactor.local")))),(0,o.kt)("li",{parentName:"ol"},'Once SSH\'ed in, we need to add some "mocking" packages. Enter the following:',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"sudo pip3 install fake-rpi"))))),(0,o.kt)("p",null,"The environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"TESTING"),' will determine if the Pioreactor should run in "testing" mode (i.e. mock out hardware required, and fake some data). We also need to specify the location of the ',(0,o.kt)("inlineCode",{parentName:"p"},"config.ini")," file with the ",(0,o.kt)("inlineCode",{parentName:"p"},"GLOBAL_CONFIG")," env variable. For example, we can mock the stirring job by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\nTESTING=1 GLOBAL_CONFIG=/home/pioreactor/.pioreactor/config.ini pio run stirring\n\n")),(0,o.kt)("p",null,"However, the experiment needs to be mocked out too:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'TESTING=1 \\\nGLOBAL_CONFIG=/home/pioreactor/.pioreactor/config.ini \\\nEXPERMENT="Demo Experiment" \\\npio run stirring\n')),(0,o.kt)("p",null,"That's a lot of typing variables, so you could move these environment variables to ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.profile"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nano ~/.profile\n")),(0,o.kt)("p",null,"And add anywhere:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'export TESTING=1\nexport GLOBAL_CONFIG=/home/pioreactor/.pioreactor/config.ini\nexport EXPERMENT="Demo Experiment"\n')),(0,o.kt)("p",null,"And finally enter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source ~/.profile\n")),(0,o.kt)("p",null,"Now you can do ",(0,o.kt)("inlineCode",{parentName:"p"},"pio run stirring")," without having to enter in the environment variables."))}s.isMDXComponent=!0}}]);