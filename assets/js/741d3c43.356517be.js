"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[3866],{26229:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(85893),i=t(11151);const o={title:"Experiment profiles schema",slug:"/experiment-profiles-schema"},a=void 0,s={id:"Extending your Pioreactor/Experiment Profiles/experiment-profiles-schema",title:"Experiment profiles schema",description:"Max number of actions",source:"@site/user-guide/03-Extending your Pioreactor/04-Experiment Profiles/10-experiment-profiles-schema.md",sourceDirName:"03-Extending your Pioreactor/04-Experiment Profiles",slug:"/experiment-profiles-schema",permalink:"/user-guide/experiment-profiles-schema",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Experiment profiles schema",slug:"/experiment-profiles-schema"},sidebar:"tutorialSidebar",previous:{title:"Creating and editing experiment profiles",permalink:"/user-guide/create-edit-experiment-profiles"},next:{title:"Standard curves for OD600 readings",permalink:"/user-guide/calibrate-od600"}},p={},l=[{value:"Max number of actions",id:"max-number-of-actions",level:3},{value:"Examples",id:"examples",level:3}];function c(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Main structure\nexperiment_profile_name: <string> # Name of the experiment profile\n\nmetadata: # Optional\n  author: <string> # Author of the experiment profile\n  description: <string> # Description of the experiment profile\n\nplugins: # Optional\n  - name: <string> # Name of the plugin\n    min_version: <string> # Minimum required version of the plugin\n\nlabels: # Optional: provide aliases\n  <pioreactor_unit_name>: <alias_name> # Optional: aliases for Pioreactors\n\ncommon: # Optional: jobs that are common for all Pioreactors\n  <job_name>:\n    actions:\n      - type: <string> # Type of action: "start", "pause", "resume", "stop", "update", or "log"\n        hours_elapsed: <float> # When the action is scheduled (in hours after experiment start)\n        options: # Optional: parameters for the action. If type=log, message= is required here.\n          <option_name>: <value>\n        arguments: <list> # Optional: arguments for the action\n\npioreactors: # Optional: jobs that are specific to some Pioreactors\n  <alias_name or pioreactor_unit_name>:\n    jobs:\n      <job_name>:\n        actions:\n          - type: <string> # Type of action: "start", "pause", "resume", "stop", or "update"\n            hours_elapsed: <float> # When the action is scheduled (in hours after experiment start)\n            options: # Optional: parameters for the action\n              <option_name>: <value>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"max-number-of-actions",children:"Max number of actions"}),"\n",(0,r.jsxs)(n.p,{children:["Currently, the max number of total actions is ",(0,r.jsx)(n.strong,{children:"248"}),". This may be relaxed in a future software version. Contact us if you need this done."]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.p,{children:["See examples of experiment profiles ",(0,r.jsx)(n.a,{href:"https://github.com/Pioreactor/experiment_profile_examples",children:"here"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>a});var r=t(67294);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);