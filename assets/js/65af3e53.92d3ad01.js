"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[1294],{23083:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var a=o(85893),s=o(11151);const n={title:"More about SQLite3 on the Pioreactor",slug:"/sqlite3"},i=void 0,r={id:"Storage and the filesystem/data-stores/sqlite",title:"More about SQLite3 on the Pioreactor",description:"How do I access the SQlite3 database?",source:"@site/developer-guide/09-Storage and the filesystem/01-data-stores/02-sqlite.md",sourceDirName:"09-Storage and the filesystem/01-data-stores",slug:"/sqlite3",permalink:"/developer-guide/sqlite3",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"More about SQLite3 on the Pioreactor",slug:"/sqlite3"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/developer-guide/data-stores-intro"},next:{title:"More about MQTT on the Pioreactor",permalink:"/developer-guide/mqtt"}},l={},d=[{value:"How do I access the SQlite3 database?",id:"how-do-i-access-the-sqlite3-database",level:3},{value:"Where is a list of tables on the database?",id:"where-is-a-list-of-tables-on-the-database",level:3},{value:"How can I add new SQL tables?",id:"how-can-i-add-new-sql-tables",level:3},{value:"How do I populate my own SQL tables?",id:"how-do-i-populate-my-own-sql-tables",level:3}];function c(e){const t={a:"a",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h3,{id:"how-do-i-access-the-sqlite3-database",children:"How do I access the SQlite3 database?"}),"\n",(0,a.jsxs)(t.p,{children:["Run",(0,a.jsx)(t.code,{children:"pio db"})," on the leader to open up the database shell. You can quit with ",(0,a.jsx)(t.code,{children:".q"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"where-is-a-list-of-tables-on-the-database",children:"Where is a list of tables on the database?"}),"\n",(0,a.jsxs)(t.p,{children:["You can either use ",(0,a.jsx)(t.code,{children:".tables"})," in the sqlite shell, or visit all the tables ",(0,a.jsx)(t.a,{href:"https://github.com/Pioreactor/CustoPiZer/blob/pioreactor/workspace/scripts/files/sql/create_tables.sql",children:"schemas here"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"how-can-i-add-new-sql-tables",children:"How can I add new SQL tables?"}),"\n",(0,a.jsxs)(t.p,{children:["Using the sqlite shell (",(0,a.jsx)(t.code,{children:"pio db"}),"), you can execute any SQL statements, including creating new tables. Plugins can also automatically create new tables when installed, ",(0,a.jsx)(t.a,{href:"developer-guide/plugin-as-python-package#5-optional-adding-tables-to-the-sql-store",children:"see instructions here"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"how-do-i-populate-my-own-sql-tables",children:"How do I populate my own SQL tables?"}),"\n",(0,a.jsxs)(t.p,{children:["The Pioreactor job ",(0,a.jsx)(t.code,{children:"mqtt_to_db_streaming"})," handles how to get data into the sqlite3 database. This job listens to specific topics in MQTT, and writes it to the database. We've implemented hooks into ",(0,a.jsx)(t.code,{children:"mqtt_to_db_streaming"})," job for you to added your own topics. In your code:"]}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["a parser, usually called ",(0,a.jsx)(t.code,{children:"parser"}),", function that accepts a MQTT topic and payload, and returns a dictionary that maps to the tables schema."]}),"\n",(0,a.jsxs)(t.li,{children:["a ",(0,a.jsx)(t.code,{children:"TopicToParserToTable"})," object is created with the MQTT topics to listen to, the parser, and the table name to load to. This ",(0,a.jsx)(t.code,{children:"TopicToParserToTable"})," is provided to ",(0,a.jsx)(t.code,{children:"register_source_to_sink"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Example below for a CO2 sensor:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'...\nfrom pioreactor.background_jobs.leader.mqtt_to_db_streaming import produce_metadata\nfrom pioreactor.background_jobs.leader.mqtt_to_db_streaming import register_source_to_sink\nfrom pioreactor.background_jobs.leader.mqtt_to_db_streaming import TopicToParserToTable\n\n...\n\ndef parser(topic, payload) -> dict:\n    metadata = produce_metadata(topic)\n    return {\n        "experiment": metadata.experiment,\n        "pioreactor_unit": metadata.pioreactor_unit,\n        "timestamp": timing.current_utc_timestamp(),\n        "co2_reading_ppm": float(payload),\n    }\n\n\nregister_source_to_sink(\n    TopicToParserToTable(\n        ["pioreactor/+/+/scd_reading/co2", "pioreactor/+/+/co2_reading/co2"],\n        parser,\n        "co2_readings",\n    )\n)\n\n'})}),"\n",(0,a.jsxs)(t.p,{children:["You can place this into the ",(0,a.jsx)(t.code,{children:"~/.pioreactor/plugins"})," folder. The next time ",(0,a.jsx)(t.code,{children:"mqtt_to_db_streaming"})," starts, it will starts listening to the specific topics."]})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>r,a:()=>i});var a=o(67294);const s={},n=a.createContext(s);function i(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);