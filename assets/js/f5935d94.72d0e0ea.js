"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[5790],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,v=d["".concat(l,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(v,i(i({ref:t},p),{},{components:n})):a.createElement(v,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},46864:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(87462),o=(n(67294),n(3905));const r={title:"Automation events",slug:"/events"},i=void 0,s={unversionedId:"Automations/events",id:"Automations/events",title:"Automation events",description:"The execute method attached to any automation can return either None, or a AutomationEvent. If the latter, the event will be published to MQTT as a published setting, i.e under the topic pioreactor///dosingautomation/latestevent. This can be used to downstream events that want to know about what events are occurring.",source:"@site/developer-guide/04-Automations/05-events.md",sourceDirName:"04-Automations",slug:"/events",permalink:"/developer-guide/events",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Automation events",slug:"/events"},sidebar:"tutorialSidebar",previous:{title:"Another example writing a new automation",permalink:"/developer-guide/writing-automations-2"},next:{title:"Writing scripts",permalink:"/developer-guide/writing-scripts"}},l={},u=[{value:"Using events, and creating your own",id:"using-events-and-creating-your-own",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," method attached to any automation can return either ",(0,o.kt)("inlineCode",{parentName:"p"},"None"),", or a ",(0,o.kt)("inlineCode",{parentName:"p"},"AutomationEvent"),". If the latter, the event will be published to MQTT as a published setting, i.e under the topic ",(0,o.kt)("inlineCode",{parentName:"p"},"pioreactor/<unit>/<experiment>/dosing_automation/latest_event"),". This can be used to downstream events that want to know about what events are occurring."),(0,o.kt)("p",null,"It may make more sense to look at a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"execute"),". This is from the builtin ",(0,o.kt)("inlineCode",{parentName:"p"},"Turbidostat")," automation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Turbidostat(DosingAutomationJob):\n    ...\n\n    def execute(self) -> Optional[events.DilutionEvent]:\n        if self.latest_od >= self.target_od:\n            self.execute_io_action(media_ml=self.volume, waste_ml=self.volume)\n            return events.DilutionEvent(\n                f\"latest OD={self.latest_od:.2f} >= target OD={self.target_od:.2f}\",\n                {'latest_od': self.latest_od, 'target_od': self.target_od}\n            )\n        else:\n            return\n")),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," runs, either a ",(0,o.kt)("inlineCode",{parentName:"p"},"DilutionEvent")," or nothing is returned. All events take up two (optional) arguments: a message, and a dictionary of arbitrary data. In this case, we've included a small message of ",(0,o.kt)("em",{parentName:"p"},"why")," the dosing did or did not occur, and included some metadata about the optical densities."),(0,o.kt)("p",null,"After ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," returns an event, it will be published to MQTT. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'pioreactor/unit/demo_exp/dosing_automation/latest_event   {"event_name":"NoEvent","message":"latest OD=0.98 < target OD=1.00","data":{"latest_od":0.98,"target_od":1.0}}\n')),(0,o.kt)("p",null,"This can be listed in other jobs, and acted on, if needed."),(0,o.kt)("h3",{id:"using-events-and-creating-your-own"},"Using events, and creating your own"),(0,o.kt)("p",null,"Pioreactor ships with some default events. They are located in ",(0,o.kt)("inlineCode",{parentName:"p"},"pioreactor.automation.events"),". Events are simple subclass of ",(0,o.kt)("inlineCode",{parentName:"p"},"events.AutomationEvent"),", so events behave and look the same, except for their name."),(0,o.kt)("p",null,"You can create custom automations, too:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"From pioreactor.automations.events import AutomationEvent\n\nclass ExampleEvent(AutomationEvent):\n    pass\n\n\nevent = ExampleEvent(\"my message\", {'some_data': 1.0})\n")))}c.isMDXComponent=!0}}]);