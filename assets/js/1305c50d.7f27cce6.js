"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[6094],{56091:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=n(85893),o=n(11151);const i={title:"Tailscale",slug:"/tailscale-remote-access",hide_table_of_contents:!0},r=void 0,a={id:"Advanced/remote-access/tailscale",title:"Tailscale",description:"To access the UI remotely, you can join an authenticated VPN using Tailscale. This greatly improves security, but adds a bit of additional work for users.",source:"@site/user-guide/30-Advanced/07-remote-access/03-tailscale.md",sourceDirName:"30-Advanced/07-remote-access",slug:"/tailscale-remote-access",permalink:"/user-guide/tailscale-remote-access",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Tailscale",slug:"/tailscale-remote-access",hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"Setting up remote access",permalink:"/user-guide/remote-access"},next:{title:"MCP and AI integrations",permalink:"/user-guide/mcp"}},l={},c=[];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"To access the UI remotely, you can join an authenticated VPN using Tailscale. This greatly improves security, but adds a bit of additional work for users."}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Tailscale is a really cool service! You may find yourself using it for other projects, too."})}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Sign up for an account at ",(0,t.jsx)(s.a,{href:"https://tailscale.com/",children:"Tailscale"}),". The free account is fine for now."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Once signed up and logged in, visit the ",(0,t.jsx)(s.a,{href:"https://login.tailscale.com/admin/machines",children:"Tailscale admin"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Install ",(0,t.jsx)(s.a,{href:"https://tailscale.com/download",children:"Tailscale on your computer"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/user-guide/accessing-raspberry-pi",children:"SSH into your leader Pioreactor"}),". Install Tailscale for Raspberry Pi with the following: ",(0,t.jsx)(s.code,{children:"curl -fsSL https://tailscale.com/install.sh | sh"}),". Don't miss that you also need to run ",(0,t.jsx)(s.code,{children:"sudo tailscale up"}),". ",(0,t.jsx)(s.em,{children:"You don't need to install anything on the workers"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Back in your ",(0,t.jsx)(s.a,{href:"https://login.tailscale.com/admin/machines",children:"Tailscale admin"}),", you should see two machines: your computer and the leader Pioreactor. Make note of the ipv4 address for the leader - we will use it below."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["You should still be able to access ",(0,t.jsx)(s.code,{children:"http://pioreactor.local"})," without any problems."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["In your ",(0,t.jsx)(s.strong,{children:"shared config.ini"}),", add your ipv4 address to the ",(0,t.jsx)(s.code,{children:"[mqtt]"})," section:","\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"broker_address=<ipv4 address>\n"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["If you have other Pioreactors in your cluster: you likely won't be adding those to tailscale (only adding the leader is necessary for remote access), so in each of the ",(0,t.jsx)(s.strong,{children:"workers' config"})," files, add the new ",(0,t.jsx)(s.code,{children:"[mqtt]"})," section like so:","\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"[mqtt]\nbroker_address=<leader name>.local\n"})}),"\n",'And save. This means that your workers will connect "locally" (over the local network), but the UI  will connect "remotely".']}),"\n",(0,t.jsxs)(s.li,{children:["Your ",(0,t.jsx)(s.strong,{children:"leader's config"})," file should stay the same (confirm it's ",(0,t.jsx)(s.code,{children:"localhost"}),")"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Now, when you leave the local network, and if you have internet access, you can turn your VPN on and still access ",(0,t.jsx)(s.code,{children:"http://<ipv4 address>"}),". Troubleshooting: try ",(0,t.jsx)(s.code,{children:"http://<hostname>"}),", but confirm that magicDNS is on, too."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"You can use the Tailscale admin to add users to your VPN, too."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>r});var t=n(67294);const o={},i=t.createContext(o);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);