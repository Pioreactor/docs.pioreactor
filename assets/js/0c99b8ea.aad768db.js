"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[7416],{4017:function(o){o.exports=JSON.parse('{"pluginId":"developer_guide","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/developer_guide/developer_guide_intro","docId":"developer_guide_intro"},{"type":"link","label":"Some important details first","href":"/developer_guide/important-concepts","docId":"important-concepts"},{"type":"category","label":"Background Jobs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to background jobs","href":"/developer_guide/Background Jobs/How background jobs work","docId":"Background Jobs/How background jobs work"},{"type":"link","label":"Writing a custom background job","href":"/developer_guide/Background Jobs/Writing a custom background job","docId":"Background Jobs/Writing a custom background job"}]},{"type":"category","label":"Automations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Automations architecture","href":"/developer_guide/Automations/Introduction to Automations","docId":"Automations/Introduction to Automations"},{"type":"link","label":"Writing new automations","href":"/developer_guide/Automations/Writing new automations","docId":"Automations/Writing new automations"},{"type":"link","label":"Another example of automation design","href":"/developer_guide/Automations/Another example of automation design","docId":"Automations/Another example of automation design"}]},{"type":"category","label":"Plugins","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to plugins","href":"/developer_guide/Plugins/Introduction to plugins","docId":"Plugins/Introduction to plugins"},{"type":"link","label":"Adding your custom automation to the web interface","href":"/developer_guide/Plugins/Adding your custom automation to the web interf","docId":"Plugins/Adding your custom automation to the web interf"},{"type":"link","label":"Turning your automation in a Python package to share","href":"/developer_guide/Plugins/Turning your automation into a plugin","docId":"Plugins/Turning your automation into a plugin"}]},{"type":"category","label":"Storage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data stores in the Pioreactor","href":"/developer_guide/Storage/Data stores in the Pioreactor","docId":"Storage/Data stores in the Pioreactor"}]},{"type":"category","label":"Local development","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Local development of Pioreactor","href":"/developer_guide/Local development/Develop on Pioreactor locally","docId":"Local development/Develop on Pioreactor locally"}]},{"type":"link","label":"The Big Architecture Picture","href":"/developer_guide/The Big Architecture Picture","docId":"The Big Architecture Picture"}]},"docs":{"Automations/Another example of automation design":{"id":"Automations/Another example of automation design","title":"Another example of automation design","description":"Let\'s design a simple LED automation for Light/Dark cycles. The basic idea is that the LED automation \\"wakes up\\" (specifically: it runs its execute method) every hour, and on specific hours, turns on or turns off the white light LEDs.","sidebar":"tutorialSidebar"},"Automations/Introduction to Automations":{"id":"Automations/Introduction to Automations","title":"Automations architecture","description":"Automations","sidebar":"tutorialSidebar"},"Automations/Writing new automations":{"id":"Automations/Writing new automations","title":"Writing new automations","description":"An automation is a hands-off way to adjust the environment for the microbes. We currently support three types of automations a turbidostat). A LED automation uses the additional LED pockets, and user-supplied LEDs, to modify light into the vial (ex: a photobioreactor or optogenetics experiments). A temperature automation is how users can preprogram the temperature of the vial.","sidebar":"tutorialSidebar"},"Background Jobs/How background jobs work":{"id":"Background Jobs/How background jobs work","title":"Introduction to background jobs","description":"The core unit of \\"work\\" in the Pioreactor software is a background job (called activities in the web interface). Background jobs include odreading, monitor, automation controllers, all the automations_ themselves, etc. Often, a community plugin is a background job (or multiple jobs) that gives your bioreactor new abilities. There are a few core feature of a background job to be highlighted if you intend on working with them.","sidebar":"tutorialSidebar"},"Background Jobs/Writing a custom background job":{"id":"Background Jobs/Writing a custom background job","title":"Writing a custom background job","description":"We\'ll explain how a background job is written using the example application of a job that control an external motor (the load). This motor may control a larger stirrer, or shaker, or air-pump, but is regulated by the amount of voltage applied - that is, the more voltage applied, the more output from the motor.","sidebar":"tutorialSidebar"},"developer_guide_intro":{"id":"developer_guide_intro","title":"Introduction","description":"This documentation is for those who want to i) get the most customization out of their Pioreactor, ii) understand how the pieces work, or iii) contribute back code to the open-source Pioreactor software.","sidebar":"tutorialSidebar"},"important-concepts":{"id":"important-concepts","title":"Some important details first","description":"Cluster topology","sidebar":"tutorialSidebar"},"Local development/Develop on Pioreactor locally":{"id":"Local development/Develop on Pioreactor locally","title":"Local development of Pioreactor","description":"Local development","sidebar":"tutorialSidebar"},"Plugins/Adding your custom automation to the web interf":{"id":"Plugins/Adding your custom automation to the web interf","title":"Adding your custom automation to the web interface","description":"With custom background jobs or automations, the end-game is really to have it available in the web interface, so you and your users don\'t need to use the command line at all. We\'ve built support for easily adding to the web interface.","sidebar":"tutorialSidebar"},"Plugins/Introduction to plugins":{"id":"Plugins/Introduction to plugins","title":"Introduction to plugins","description":"Pioreactor plugins are a way to distribute code to others (or yourself), and avoid having to use the command line each time you invoke your custom code - you should be able to just use the web interface.","sidebar":"tutorialSidebar"},"Plugins/Turning your automation into a plugin":{"id":"Plugins/Turning your automation into a plugin","title":"Turning your automation in a Python package to share","description":"Following the template here//github.com/Pioreactor/pioreactor\\\\custom\\\\dosing\\\\automation, you can package and deploy your automation to your Pioreactor cluster, or for others to use.","sidebar":"tutorialSidebar"},"Storage/Data stores in the Pioreactor":{"id":"Storage/Data stores in the Pioreactor","title":"Data stores in the Pioreactor","description":"The Pioreactor has a few different ways to store data (depending on the requirements). They are:","sidebar":"tutorialSidebar"},"The Big Architecture Picture":{"id":"The Big Architecture Picture","title":"The Big Architecture Picture","description":"","sidebar":"tutorialSidebar"}}}')}}]);