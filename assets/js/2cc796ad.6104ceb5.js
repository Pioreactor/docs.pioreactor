"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[6705],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||l;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<l;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1838:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s}});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),a=["components"],i={title:"Local development of Pioreactor",slug:"/local-development"},p=void 0,c={unversionedId:"Local development/local-development",id:"Local development/local-development",title:"Local development of Pioreactor",description:"Local development",source:"@site/developer-guide/06-Local development/01-local-development.md",sourceDirName:"06-Local development",slug:"/local-development",permalink:"/developer-guide/local-development",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Local development of Pioreactor",slug:"/local-development"},sidebar:"tutorialSidebar",previous:{title:"Data stores in the Pioreactor",permalink:"/developer-guide/data-stores"},next:{title:"I\xb2C addresses",permalink:"/developer-guide/i2c-addresses"}},u={},s=[{value:"Local development",id:"local-development",level:4},{value:"MQTT",id:"mqtt",level:4},{value:"Testing",id:"testing",level:4},{value:"Running jobs locally",id:"running-jobs-locally",level:4},{value:"Raspberry Pi Images",id:"raspberry-pi-images",level:4}],d={toc:s};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"local-development"},"Local development"),(0,l.kt)("p",null,"To install the Pioreactor codebase locally, it should be enough to clone the repo ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/pioreactor/pioreactor"},"pioreactor/pioreactor")," and run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pip3 install -e .\npip3 install -r requirements/requirements_dev.txt\n")),(0,l.kt)("h4",{id:"mqtt"},"MQTT"),(0,l.kt)("p",null,"You will need to set up MQTT locally. On OSX, homebrew can be used to install the MQTT broker ",(0,l.kt)("inlineCode",{parentName:"p"},"mosquitto"),". Also enable logging in ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local/etc/mosquitto/mosquitto.conf")," by adding a line like:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"log_dest file path/to/somewhere/.mosquitto/log\n")),(0,l.kt)("p",null,"The CLI tools ",(0,l.kt)("inlineCode",{parentName:"p"},"mosquitto_pub")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"mosquitto_sub")," should work as well."),(0,l.kt)("h4",{id:"testing"},"Testing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"py.test pioreactor/tests\n")),(0,l.kt)("h4",{id:"running-jobs-locally"},"Running jobs locally"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"TESTING=1 pio run <job name>\n")),(0,l.kt)("p",null,"You can also modify to hostname and experiment with"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"TESTING=1 \\\nHOSTNAME=<whatever> \\\nEXPERIMENT=<up to you> \\\npio run <job name>\n")),(0,l.kt)("h4",{id:"raspberry-pi-images"},"Raspberry Pi Images"),(0,l.kt)("p",null,"Raspberry Pi images are built in the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Pioreactor/CustoPiZer/tree/pioreactor"},"Pioreactor/CustoPizer")," repo, though these aren't needed for development."))}m.isMDXComponent=!0}}]);