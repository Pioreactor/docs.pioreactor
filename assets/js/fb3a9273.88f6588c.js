"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[6845],{83319:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=n(85893),t=n(11151);const r={title:"Configuration via config.ini",slug:"/configuration"},c=void 0,s={id:"Extending your Pioreactor/configuration",title:"Configuration via config.ini",description:"How configuration works across Pioreactors",source:"@site/user-guide/03-Extending your Pioreactor/05-configuration.md",sourceDirName:"03-Extending your Pioreactor",slug:"/configuration",permalink:"/user-guide/configuration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Configuration via config.ini",slug:"/configuration"},sidebar:"tutorialSidebar",previous:{title:"Standard curves for OD600 readings",permalink:"/user-guide/calibrate-od600"},next:{title:"Using a peristaltic pump with your Pioreactor",permalink:"/user-guide/using-pumps"}},a={},d=[{value:"How configuration works across Pioreactors",id:"how-configuration-works-across-pioreactors",level:3},{value:"Last-occurrence wins",id:"last-occurrence-wins",level:4},{value:"Editing the configuration files from the web interface",id:"editing-the-configuration-files-from-the-web-interface",level:3},{value:"Editing the configuration files from the command line",id:"editing-the-configuration-files-from-the-command-line",level:3},{value:"Editing the <code>config.ini</code> before booting",id:"editing-the-configini-before-booting",level:3},{value:"Example <code>config.ini</code>",id:"example-configini",level:3}];function l(e){const i={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",img:"img",p:"p",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h3,{id:"how-configuration-works-across-pioreactors",children:"How configuration works across Pioreactors"}),"\n",(0,o.jsxs)(i.p,{children:["Configuration of the Pioreactors is through configuration files, prefixed by ",(0,o.jsx)(i.code,{children:".ini"}),". There are two types of ",(0,o.jsx)(i.code,{children:".ini"})," files: a shared ",(0,o.jsx)(i.code,{children:"config.ini"}),", which is the same across all units, and a unit-specific ",(0,o.jsx)(i.code,{children:"unit_config.ini"})," file, which can have settings that overwrite those found in the shared ",(0,o.jsx)(i.code,{children:"config.ini"}),"."]}),"\n",(0,o.jsxs)(i.p,{children:["For example (and see image below), each unit will use the shared config.ini setting of ",(0,o.jsx)(i.code,{children:"target_rpm=500"}),", unless an alternative setting is present in their specific ",(0,o.jsx)(i.code,{children:"unit_config.ini"})," files (like ",(0,o.jsx)(i.code,{children:"target_rpm=400"})," found in ",(0,o.jsx)(i.code,{children:"unit1_config.ini"}),") . This overriding lets you customize specific behavior ",(0,o.jsx)(i.em,{children:"per"})," Pioreactor, without having to duplicate lots of configuration over and over again."]}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{src:n(39042).Z+"",width:"2086",height:"1136"})}),"\n",(0,o.jsx)(i.h4,{id:"last-occurrence-wins",children:"Last-occurrence wins"}),"\n",(0,o.jsx)(i.p,{children:"The config.ini can have duplicate entries (though it's not recommended), but only the last occurrence in the file will be used."}),"\n",(0,o.jsx)(i.h3,{id:"editing-the-configuration-files-from-the-web-interface",children:"Editing the configuration files from the web interface"}),"\n",(0,o.jsxs)(i.p,{children:["At ",(0,o.jsx)(i.a,{href:"http://pioreactor.local",children:"pioreactor.local"}),", navigate to the ",(0,o.jsx)(i.em,{children:"Configuration"})," page in the sidebar."]}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"Edit configuration page",src:n(77474).Z+"",width:"2652",height:"1408"})}),"\n",(0,o.jsx)(i.p,{children:"Select the configuration file you wish to edit from the dropdown:"}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"Choose the config.ini you wish to edit",src:n(78297).Z+"",width:"2652",height:"1408"})}),"\n",(0,o.jsx)(i.p,{children:"Clicking [Save] will save the new configuration and will deploy the new configuration to the proper Pioreactor unit(s)."}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"Save the edited config.ini using the Save button",src:n(67633).Z+"",width:"2652",height:"1408"})}),"\n",(0,o.jsx)(i.p,{children:"Pioreactor also stores a history of changes to each configuration file. You can view previous versions of configuration files in the dropdown. Clicking [Revert] will save the displayed configuration file."}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"Select historical versions of config.ini&#39;s",src:n(77192).Z+"",width:"2652",height:"1408"})}),"\n",(0,o.jsx)(i.h3,{id:"editing-the-configuration-files-from-the-command-line",children:"Editing the configuration files from the command line"}),"\n",(0,o.jsxs)(i.p,{children:["All the ",(0,o.jsx)(i.code,{children:".ini"})," files come from the leader unit. They are stored in ",(0,o.jsx)(i.code,{children:"/home/pioreactor/.pioreactor"})," - one ",(0,o.jsx)(i.code,{children:"config.ini"})," and a ",(0,o.jsx)(i.code,{children:"config_<unitName>.ini"})," for each Pioreactor unit. The command ",(0,o.jsx)(i.code,{children:"pios sync-configs"})," will deploy the ",(0,o.jsx)(i.code,{children:".ini"})," files to their correct unit. Editing the ",(0,o.jsx)(i.code,{children:".ini"})," files on the leader is correct workflow, as any edits on the worker units will be overwritten on the next ",(0,o.jsx)(i.code,{children:"pios sync-configs"}),"."]}),"\n",(0,o.jsxs)(i.p,{children:["One can programmatically, or by hand, edit the ",(0,o.jsx)(i.code,{children:"config_<unitName>.ini"})," files to create varying parameters in an experiment. Running ",(0,o.jsx)(i.code,{children:"pios sync-configs"})," will deploy the config files."]}),"\n",(0,o.jsxs)(i.h3,{id:"editing-the-configini-before-booting",children:["Editing the ",(0,o.jsx)(i.code,{children:"config.ini"})," before booting"]}),"\n",(0,o.jsxs)(i.p,{children:["Sometimes it's desirable to make changes to the ",(0,o.jsx)(i.code,{children:"config.ini"})," without having to boot the Pioreactor first. You can do this by plugging the microSD card into your computer, and adding a ",(0,o.jsx)(i.code,{children:"config.ini"})," to the ",(0,o.jsx)(i.code,{children:"boot/"})," folder on it. This ",(0,o.jsx)(i.code,{children:"config.ini"})," doesn't need to have all the fields, only the fields you wish to change. At start up, the Pioreactor will merge ",(0,o.jsx)(i.code,{children:"/boot/config.ini"})," into the Pioreactor's ",(0,o.jsx)(i.code,{children:"config.ini"}),", and then delete ",(0,o.jsx)(i.code,{children:"/boot/config.ini"}),"."]}),"\n",(0,o.jsxs)(i.h3,{id:"example-configini",children:["Example ",(0,o.jsx)(i.code,{children:"config.ini"})]}),"\n",(0,o.jsxs)(i.p,{children:["If you need a reference config.ini, or to replace parts of yours, here's our ",(0,o.jsx)(i.a,{href:"https://raw.githubusercontent.com/Pioreactor/CustoPiZer/pioreactor/workspace/scripts/files/config.example.ini",children:"default one"})," that ships with the Raspberry Pi image. To use it, you'll need to make some changes, specifically to `cluster.leader` and `inventory`."]})]})}function h(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},77192:(e,i,n)=>{n.d(i,{Z:()=>o});const o=n.p+"assets/images/choose_config_version2-4533d1e783827d808495b76a29082e51.png"},39042:(e,i,n)=>{n.d(i,{Z:()=>o});const o=n.p+"assets/images/configini-9152ccc3666041a79b89c3d8ba18d4c8.png"},77474:(e,i,n)=>{n.d(i,{Z:()=>o});const o=n.p+"assets/images/edit_config_page-eab605765714cc6c72a981f3edf103c8.png"},78297:(e,i,n)=>{n.d(i,{Z:()=>o});const o=n.p+"assets/images/find_config_to_edit-8ebe7a3a7597211a558c99be5d86002d.png"},67633:(e,i,n)=>{n.d(i,{Z:()=>o});const o=n.p+"assets/images/save_config-bbc8686e8ba6559fd28c55579eb0e80c.png"},11151:(e,i,n)=>{n.d(i,{Z:()=>s,a:()=>c});var o=n(67294);const t={},r=o.createContext(t);function c(e){const i=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(r.Provider,{value:i},e.children)}}}]);