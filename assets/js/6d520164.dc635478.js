"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[2166],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=i.createContext({}),u=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=u(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),g=o,h=c["".concat(p,".").concat(g)]||c[g]||d[g]||a;return n?i.createElement(h,r(r({ref:t},s),{},{components:n})):i.createElement(h,r({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<a;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3297:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var i=n(7462),o=(n(7294),n(3905));const a={title:"Turning your plugins into a Python package to share",slug:"/plugin-as-python-package"},r=void 0,l={unversionedId:"Plugins/plugin-as-python-package",id:"Plugins/plugin-as-python-package",title:"Turning your plugins into a Python package to share",description:"The plugin and yaml files are all you need to use your plugin on your local Pioreactors. If you'd like to contribute your plugin to the community, this is done easily by creating a Python package and uploading to PyPi. Let's walk through this!",source:"@site/developer-guide/04-Plugins/03-plugin-as-python-package.md",sourceDirName:"04-Plugins",slug:"/plugin-as-python-package",permalink:"/developer-guide/plugin-as-python-package",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Turning your plugins into a Python package to share",slug:"/plugin-as-python-package"},sidebar:"tutorialSidebar",previous:{title:"Adding your plugins to the web interface",permalink:"/developer-guide/adding-plugins-to-ui"},next:{title:"Data stores in the Pioreactor",permalink:"/developer-guide/data-stores"}},p={},u=[{value:"Organizing your files",id:"organizing-your-files",level:2},{value:"1. A license (MIT) text file, <code>named LICENSE.txt</code>",id:"1-a-license-mit-text-file-named-licensetxt",level:4},{value:"2. A README file, named <code>README.md</code>",id:"2-a-readme-file-named-readmemd",level:4},{value:"3. A setup Python file, named <code>setup.py</code>",id:"3-a-setup-python-file-named-setuppy",level:4},{value:"4. A subfolder containing your plugin",id:"4-a-subfolder-containing-your-plugin",level:4},{value:"Contents of the subfolder:",id:"contents-of-the-subfolder",level:3},{value:"1. Your plugin file",id:"1-your-plugin-file",level:4},{value:"2. An initial Python file, named <code>__init__.py</code>",id:"2-an-initial-python-file-named-__init__py",level:4},{value:"3. A configuration file, named <code>additional_config.ini</code>",id:"3-a-configuration-file-named-additional_configini",level:4},{value:"4. More subfolders",id:"4-more-subfolders",level:4},{value:"Create a Python package on PyPi",id:"create-a-python-package-on-pypi",level:2},{value:"Sharing your plugin on the web interface",id:"sharing-your-plugin-on-the-web-interface",level:2}],s={toc:u};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,i.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The plugin and yaml files are all you need to use your plugin on your local Pioreactors. If you'd like to contribute your plugin to the community, this is done easily by creating a Python package and uploading to PyPi. Let's walk through this! "),(0,o.kt)("p",null,"Note that in that template package, there are ways to add fields to the configuration (see ",(0,o.kt)("inlineCode",{parentName:"p"},"additional_config.ini"),", which gets merged with ",(0,o.kt)("inlineCode",{parentName:"p"},"config.ini")," on installation), and adding your automation to the web UI (see the specific folder structure in the ",(0,o.kt)("inlineCode",{parentName:"p"},"ui")," folder)."),(0,o.kt)("h2",{id:"organizing-your-files"},"Organizing your files"),(0,o.kt)("p",null,"MANIFEST - at build step, tells what packages in the wheel "),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Note that the way files are organized depends on if your plugin is an ",(0,o.kt)("strong",{parentName:"p"},"automation")," or a ",(0,o.kt)("strong",{parentName:"p"},"background job"),". ")),(0,o.kt)("p",null,"Consider an example plugin: a ",(0,o.kt)("strong",{parentName:"p"},"background job")," called ",(0,o.kt)("em",{parentName:"p"},"Relay"),", which just turns on or off anything thats plugged into a channel of your chosing. Follow the file organization here: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kellytr/pioreactor-relay-plugin"},"https://github.com/kellytr/pioreactor-relay-plugin"),". "),(0,o.kt)("p",null,"Here's a general schematic of how your files should be organized for a background job: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udcc1 my-plugin-name\n\u251c\u2500 \ud83d\udcc1 my_plugin_name\n\u2502  \u251c\u2500 \ud83d\udcc1 ui\n\u2502  \u2502  \u251c\u2500 \ud83d\udcc1 contrib\n\u2502  \u2502  \u2502  \u251c\u2500 \ud83d\udcc1 jobs\n\u2502  \u2502  \u2502  \u2502  \u251c\u2500 \ud83d\udcdd my_plugin.yaml\n\u2502  \u251c\u2500 \ud83d\udcdd __init__.py\n\u2502  \u251c\u2500 \ud83d\udcdd additional_config.ini\n\u2502  \u251c\u2500 \ud83d\udcdd my_plugin.py\n\u251c\u2500 \ud83d\udcdd LICENSE.txt\n\u251c\u2500 \ud83d\udcdd README.md\n\u251c\u2500 \ud83d\udcdd setup.py\n")),(0,o.kt)("p",null,"The schematic is very similar for an ",(0,o.kt)("strong",{parentName:"p"},"automation plugin")," ","\u2014"," the only difference is the location of the ",(0,o.kt)("inlineCode",{parentName:"p"},".yaml")," file. Follow the template here for automation specific plugins:",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Pioreactor/pioreactor_custom_dosing_automation"},"https://github.com/Pioreactor/pioreactor","_","custom","_","dosing","_","automation"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udcc1 my-plugin-name\n\u251c\u2500 \ud83d\udcc1 my_plugin_name\n\u2502  \u251c\u2500 \ud83d\udcc1 ui\n\u2502  \u2502  \u251c\u2500 \ud83d\udcc1 contrib\n\u2502  \u2502  \u2502  \u251c\u2500 \ud83d\udcc1 automations\n\u2502  \u2502  \u2502  \u2502  \u251c\u2500 \ud83d\udcc1 <SPECIFIC AUTOMATION (ex. dosing)>\n\u2502  \u2502  \u2502  \u2502  \u2502  \u251c\u2500 \ud83d\udcdd my_plugin.yaml\n\u2502  \u251c\u2500 \ud83d\udcdd __init__.py\n\u2502  \u251c\u2500 \ud83d\udcdd additional_config.ini\n\u2502  \u251c\u2500 \ud83d\udcdd my_plugin.py\n\u251c\u2500 \ud83d\udcdd LICENSE.txt\n\u251c\u2500 \ud83d\udcdd README.md\n\u251c\u2500 \ud83d\udcdd setup.py\n")),(0,o.kt)("p",null,"Start by creating a new file for your plugin. In our case, we named it ",(0,o.kt)("inlineCode",{parentName:"p"},"pioreactor-relay-plugin"),". This ",(0,o.kt)("strong",{parentName:"p"},"main file")," will contain 4 important parts: "),(0,o.kt)("h4",{id:"1-a-license-mit-text-file-named-licensetxt"},"1. A license (MIT) text file, ",(0,o.kt)("inlineCode",{parentName:"h4"},"named LICENSE.txt")),(0,o.kt)("p",null,"Create a text document and paste the following: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Copyright <YEAR> <COPYRIGHT HOLDER>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n')),(0,o.kt)("h4",{id:"2-a-readme-file-named-readmemd"},"2. A README file, named ",(0,o.kt)("inlineCode",{parentName:"h4"},"README.md")),(0,o.kt)("p",null,"Write a few notes with general information on your plugin to guide users. "),(0,o.kt)("h4",{id:"3-a-setup-python-file-named-setuppy"},"3. A setup Python file, named ",(0,o.kt)("inlineCode",{parentName:"h4"},"setup.py")),(0,o.kt)("p",null,"Create a Python file and paste the following. Make changes based on your own plugin information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# -*- coding: utf-8 -*-\nfrom setuptools import setup, find_packages\n\nsetup(\n    name="pioreactor_relay_plugin",\n    version="<VERSION>",\n    license="MIT",\n    description="<DESCRIPTION OF PLUGIN>",\n    long_description=open("README.md").read(),\n    long_description_content_type="text/markdown",\n    author_email="<EMAIL>",\n    author="<NAME>",\n    url="https://github.com/<USERNAME>/<MAIN FOLDER>",\n    packages=find_packages(),\n    include_package_data=True,\n    entry_points={\n        "pioreactor.plugins": "<SUBFOLDER CONTAINING PLUGIN> = <SUBFOLDER CONTAINING PLUGIN>"\n    },\n)\n')),(0,o.kt)("h4",{id:"4-a-subfolder-containing-your-plugin"},"4. A subfolder containing your plugin"),(0,o.kt)("p",null,"Within the main file ",(0,o.kt)("inlineCode",{parentName:"p"},"pioreactor-relay-plugin"),", we created a subfile ",(0,o.kt)("inlineCode",{parentName:"p"},"pioreactor_relay_plugin"),". "),(0,o.kt)("h3",{id:"contents-of-the-subfolder"},"Contents of the subfolder:"),(0,o.kt)("h4",{id:"1-your-plugin-file"},"1. Your plugin file"),(0,o.kt)("h4",{id:"2-an-initial-python-file-named-__init__py"},"2. An initial Python file, named ",(0,o.kt)("inlineCode",{parentName:"h4"},"__init__.py")),(0,o.kt)("p",null,"This will contain an ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," statement such as the following: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from <SUBFOLDER CONTAINING PLUGIN>.<PLUGIN> import <PLUGIN FUNCTION>\n")),(0,o.kt)("p",null,"This imports the function within our plugin file that executes our plugin action. "),(0,o.kt)("h4",{id:"3-a-configuration-file-named-additional_configini"},"3. A configuration file, named ",(0,o.kt)("inlineCode",{parentName:"h4"},"additional_config.ini")),(0,o.kt)("p",null,"This configuration file will contain additional configs that we want to add to our list of existing Configurations on the Pioreactor web interface. This file will be merged with the existing ",(0,o.kt)("inlineCode",{parentName:"p"},"config.ini")," when the plugin is installed. "),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(4636).Z,width:"951",height:"557"})),(0,o.kt)("h4",{id:"4-more-subfolders"},"4. More subfolders"),(0,o.kt)("p",null,"Within our main subfolder, create a subfolder named ",(0,o.kt)("inlineCode",{parentName:"p"},"ui"),". Within that, create a subfolder ",(0,o.kt)("inlineCode",{parentName:"p"},"contrib"),", then ",(0,o.kt)("inlineCode",{parentName:"p"},"jobs"),"."),(0,o.kt)("p",null,"In the case of creating an ",(0,o.kt)("strong",{parentName:"p"},"automation plugin")," instead of a ",(0,o.kt)("strong",{parentName:"p"},"background job"),", the subfolders are ",(0,o.kt)("inlineCode",{parentName:"p"},"ui/contrib/automations/<SPECIFIC AUTOMATION>"),": "),(0,o.kt)("p",null," In both cases, move your ",(0,o.kt)("inlineCode",{parentName:"p"},".yaml")," file to the final subfolder."),(0,o.kt)("h2",{id:"create-a-python-package-on-pypi"},"Create a Python package on PyPi"),(0,o.kt)("p",null,"Create an account on ",(0,o.kt)("a",{parentName:"p",href:"https://pypi.org/"},"https://pypi.org/"),". Make sure to verify your email."),(0,o.kt)("p",null,"On your command line, type the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pip install twine\npip install --upgrade build\npython -m build --wheel     \ntwine upload dist/<.WHL FILE>\n")),(0,o.kt)("p",null,"You will then be prompted for a username and password. Use the credentials for your PyPi account. Then, your package is uploaded and viewable at the link provided! "),(0,o.kt)("h2",{id:"sharing-your-plugin-on-the-web-interface"},"Sharing your plugin on the web interface"),(0,o.kt)("p",null,"To add your plugin as an option on the web interface, you will need to edit the ",(0,o.kt)("strong",{parentName:"p"},"plugins.json")," file within our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Pioreactor/list-of-plugins"},"Pioreactor repository, list-of-plugins"),". "),(0,o.kt)("p",null,"There are two ways to do this: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an issue to have us edit the plugins.json file for you. "),(0,o.kt)("li",{parentName:"ol"},"Fork from our repository to edit the plugins.json file, then create a pull request. ")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(5178).Z,width:"1896",height:"798"})),(0,o.kt)("p",null,"In both cases, we will evaluate your plugin to ensure code quality and all requirements are met (tests are included)."))}d.isMDXComponent=!0},4636:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/python-package-new-config-fc1c3fe6948cde33a3e00db59cf98588.png"},5178:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/python-package-pull-or-issue-050b26469751ff2da3986a6c75cbfb58.png"}}]);