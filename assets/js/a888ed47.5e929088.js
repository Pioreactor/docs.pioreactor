"use strict";(self.webpackChunkpioreactor=self.webpackChunkpioreactor||[]).push([[842],{45564:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var n=i(85893),r=i(11151);const l={title:"Command line interface",slug:"/cli",hide_table_of_contents:!0},s=void 0,t={id:"Advanced/cli",title:"Command line interface",description:"For those interested, you can use the command line to interact with the Pioreactors. This is called the command line interface (CLI). Log onto either the leader or worker and you can execute the following commands. Full options and up-to-date documentation are available with pio  --help.",source:"@site/user-guide/30-Advanced/01-cli.md",sourceDirName:"30-Advanced",slug:"/cli",permalink:"/user-guide/cli",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Command line interface",slug:"/cli",hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"Accessing the Raspberry Pi",permalink:"/user-guide/accessing-raspberry-pi"},next:{title:"Growth rate cuve modelling",permalink:"/user-guide/growth-rate-modelling"}},c={},d=[{value:"Worker commands",id:"worker-commands",level:3},{value:"Leader-only commands",id:"leader-only-commands",level:3},{value:"Leader-only commands to control workers",id:"leader-only-commands-to-control-workers",level:4}];function a(e){const o={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["For those interested, you can use the command line to interact with the Pioreactors. This is called the command line interface (CLI). Log onto either the ",(0,n.jsx)(o.a,{href:"/user-guide/create-cluster",children:"leader or worker"})," and you can execute the following commands. Full options and up-to-date documentation are available with ",(0,n.jsx)(o.code,{children:"pio <command> --help"}),"."]}),"\n",(0,n.jsx)(o.h3,{id:"worker-commands",children:"Worker commands"}),"\n",(0,n.jsxs)(o.p,{children:["Interacting with the Pioreactor on the command line are through the ",(0,n.jsx)(o.code,{children:"pio"})," tool. Available arguments are:"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio logs"})," will produce a stream of recent logs events. Logs are stored in ",(0,n.jsx)(o.code,{children:"/var/log/pioreactor.log"}),"."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio kill --job-name <job>"})," or ",(0,n.jsx)(o.code,{children:"pio kill --all-jobs"})," to end jobs."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio run <job> <options>"})," will run the ",(0,n.jsx)(o.code,{children:"<job>"}),". Each job may have specific command line arguments."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio version"})," print the version of the PioreactorApp software."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio update app"})," will update the software to the latest version."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio update ui"})," will update the ui to the latest version."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio update"})," will update both the app and ui to the latest version."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio blink"})," will blink the Pioreactor's onboard LED."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio log -m <message>"})," will log a message"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio cache view <cache>"})," will print out the contents of the specified cache."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio cache clear <cache> <key>"})," will remove ",(0,n.jsx)(o.code,{children:"<key>"})," from cache ",(0,n.jsx)(o.code,{children:"<cache>"}),"."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio plugins --help"})," for managing plugins"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio calibrations --help"})," for managing calibrations."]}),"\n"]}),"\n",(0,n.jsx)(o.h3,{id:"leader-only-commands",children:"Leader-only commands"}),"\n",(0,n.jsxs)(o.p,{children:["The leader also has their own unique set of ",(0,n.jsx)(o.code,{children:"pio"})," commands (these commands do not interact with the workers):"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio db"}),": open the sqlite3 CLI of the Pioreactor database."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio mqtt"}),": tail the MQTT broker."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio workers"})," has many subcommands for manager your cluster. For example:","\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio workers add <hostname>"}),": add a Pioreactor to your cluster, with given (unique) name. Need a worker Pioreactor on the network first. See instructions ",(0,n.jsx)(o.a,{href:"https://github.com/Pioreactor/pioreactor/wiki/Installation",children:"here"}),"."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio workers remove <hostname>"}),": remove a Pioreactor from your cluster."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio workers discover"})," will return a list of workers on the network (may be a superset of the current cluster.)"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pio workers status"})," will report to the user each Pioreactor in the cluster, and metadata like status, IP, and state."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"leader-only-commands-to-control-workers",children:"Leader-only commands to control workers"}),"\n",(0,n.jsxs)(o.p,{children:["The leader Pioreactor interacts with the worker computers using the ",(0,n.jsx)(o.code,{children:"pios"})," command. Unless otherwise noted, the ",(0,n.jsx)(o.code,{children:"pios"})," will target all worker computers. Available ",(0,n.jsx)(o.code,{children:"pios"})," commands on the leader Pioreactor are the following:"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios kill --job-name <job>"})," terminate the job ",(0,n.jsx)(o.code,{children:"<job>"})," on the workers. Ex: ",(0,n.jsx)(o.code,{children:"pios kill --job-name dosing_automation"}),"."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios run <job>"})," on each worker, run the job ",(0,n.jsx)(o.code,{children:"<job>"})," in the background. Job specific arguments can be specified after. Ex: ",(0,n.jsx)(o.code,{children:"pios run add_media --ml 1"}),"."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios update"})," install the latest Pioreactor software on each worker."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios sync-configs"})," deploy the config.ini files to workers."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios plugins install <plugin name>"})," will install the plugin on each worker ",(0,n.jsx)(o.em,{children:"and"})," the leader."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios plugins uninstall <plugin name>"})," will uninstall the plugin on each worker ",(0,n.jsx)(o.em,{children:"and"})," the leader."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios reboot"})," will reboot all workers, by default, in the cluster. See ",(0,n.jsx)(o.code,{children:"--units"})," arg below."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios shutdown"})," will shut down all workers, by default, in the cluster. See ",(0,n.jsx)(o.code,{children:"--units"})," arg below."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios cp <filepath>"})," will copy (and possibly overwrite) ",(0,n.jsx)(o.code,{children:"filepath"})," on the leader to all the workers."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"pios rm <filepath>"})," will remove ",(0,n.jsx)(o.code,{children:"filepath"})," on all the workers."]}),"\n"]}),"\n",(0,n.jsx)(o.admonition,{type:"tip",children:(0,n.jsxs)(o.p,{children:["In each of the above commands, specific workers can be invoked with ",(0,n.jsx)(o.code,{children:"--units"})," (which can be used multiple times. Ex: ",(0,n.jsx)(o.code,{children:"pios run stirring --units pio1 --units pio2"}),"."]})}),"\n",(0,n.jsx)(o.admonition,{type:"tip",children:(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.code,{children:"-y"})," will skip user confirmation of the command to run."]})}),"\n",(0,n.jsx)(o.admonition,{type:"tip",children:(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.code,{children:"--json"})," will display json output of the callbacks to each worker."]})})]})}function h(e={}){const{wrapper:o}={...(0,r.a)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},11151:(e,o,i)=>{i.d(o,{Z:()=>t,a:()=>s});var n=i(67294);const r={},l=n.createContext(r);function s(e){const o=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(l.Provider,{value:o},e.children)}}}]);